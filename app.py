import asyncio
import os
import logging
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.client.default import DefaultBotProperties
from aiogram.types import (
    BotCommand,
    BotCommandScopeAllPrivateChats,
    BotCommandScopeDefault,
)
from dotenv import load_dotenv

from config import Config
from db import init_engine, create_all
import models  # –¥–ª—è create_all
from handlers import onboarding, commands, errors
from scheduler import BotScheduler


async def _setup_bot_commands(bot: Bot):
    """
    –Ø–∫—â–æ DISABLE_SLASH_MENU=1 ‚Äî –æ—á–∏—â–∞—î–º–æ –æ—Ñ—ñ—Ü—ñ–π–Ω–µ "/"-–º–µ–Ω—é.
    –Ü–Ω–∞–∫—à–µ ‚Äî –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–∞—à —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∑ –æ–ø–∏—Å–∞–º–∏.
    """
    if os.getenv("DISABLE_SLASH_MENU", "0") == "1":
        # –í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ–º–∞–Ω–¥–∏ —É –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö —á–∞—Ç–∞—Ö (–∑ —ñ –±–µ–∑ –º–æ–≤–∏) —ñ —É –¥–µ—Ñ–æ–ª—Ç–Ω–æ–º—É —Å–∫–æ–ø—ñ
        try:
            await bot.delete_my_commands(scope=BotCommandScopeAllPrivateChats(), language_code="uk")
        except Exception:
            pass
        try:
            await bot.delete_my_commands(scope=BotCommandScopeAllPrivateChats())
        except Exception:
            pass
        try:
            await bot.delete_my_commands(scope=BotCommandScopeDefault(), language_code="uk")
        except Exception:
            pass
        try:
            await bot.delete_my_commands(scope=BotCommandScopeDefault())
        except Exception:
            pass
        return

    # –Ü–Ω–∞–∫—à–µ ‚Äî —Å—Ç–∞–≤–∏–º–æ –Ω–∞—à—ñ –∫–æ–º–∞–Ω–¥–∏
    cmds = [
        BotCommand(command="start", description="‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è (—Ä–æ–ª—å, –≥—Ä—É–ø–∞/–≤–∏–∫–ª–∞–¥–∞—á, –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è)"),
        BotCommand(command="next", description="‚è≠ –ù–∞–π–±–ª–∏–∂—á–∞ –ø–∞—Ä–∞"),
        BotCommand(command="today", description="üìÖ –ü–∞—Ä–∏ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ"),
        BotCommand(command="tomorrow", description="üìÜ –ü–∞—Ä–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞"),
        BotCommand(command="week", description="üóì –ü–∞—Ä–∏ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å"),
        BotCommand(command="help", description="‚ÑπÔ∏è –î–æ–≤—ñ–¥–∫–∞"),
    ]
    await bot.set_my_commands(cmds, scope=BotCommandScopeAllPrivateChats(), language_code="uk")
    #await bot.set_my_commands(cmds, scope=BotCommandScopeAllPrivateChats())


async def main():
    load_dotenv()
    cfg = Config.load()
    if not cfg.bot_token:
        raise RuntimeError("BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω–æ")

    init_engine(cfg.database_url)
    await create_all(models)

    bot = Bot(token=cfg.bot_token, default=DefaultBotProperties(parse_mode=None, link_preview_is_disabled=True))
    await bot.delete_webhook(drop_pending_updates=True)
    dp = Dispatcher(storage=MemoryStorage())

    dp.include_router(onboarding.router)
    dp.include_router(commands.router)
    dp.include_router(errors.router)

    # –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ (–∞–±–æ –æ—á–∏—Å—Ç–∏—Ç–∏) –æ—Ñ—ñ—Ü—ñ–π–Ω–µ "/"-–º–µ–Ω—é
    await _setup_bot_commands(bot)

    bs = BotScheduler(bot)
    bs.start()

    print("Bot started.")
    try:
        await dp.start_polling(bot)
    except (asyncio.CancelledError, KeyboardInterrupt):
        # –ù–æ—Ä–º–∞–ª—å–Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è: Ctrl+C, SIGTERM –∞–±–æ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è —Ç–∞—Å–∫—ñ–≤ –ø–æ–ª–ª—ñ–Ω–≥–∞
        logging.info("Shutdown requested, stopping gracefully...")
    finally:
        # –ê–∫—É—Ä–∞—Ç–Ω–æ –∑–∞–∫—Ä–∏–≤–∞—î–º–æ HTTP-—Å–µ—Å—ñ—é –±–æ—Ç–∞
        try:
            await bot.session.close()
        except Exception:
            pass
        # –Ø–∫—â–æ —É –≤–∞—à–æ–≥–æ –ø–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫–∞ —î –º–µ—Ç–æ–¥ –∑—É–ø–∏–Ω–∫–∏ ‚Äî –∑—É–ø–∏–Ω—è—î–º–æ
        try:
            if hasattr(bs, "stop"):
                bs.stop()
            elif hasattr(bs, "shutdown"):
                bs.shutdown()
        except Exception:
            pass


if __name__ == "__main__":
    asyncio.run(main())
